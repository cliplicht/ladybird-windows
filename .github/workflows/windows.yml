name: Windows (clang-cl + Ninja)

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        config: [Debug, Release]
        include:
          - config: Debug
            configure_preset: win-clangcl-debug
            build_preset: build-debug
          - config: Release
            configure_preset: win-clangcl-release
            build_preset: build-release

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # MSVC environment (provides Windows SDK + lib paths)
      - name: MSVC env
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@v4

      # LLVM/Clang-CL 21+ is required for MSVC STL v14.44 (avoids STL1000)
      - name: Install LLVM
        uses: KyleMayes/install-llvm-action@v2.0.8
        with:
          version: "21.1.3"
          directory: "C:\\LLVM"

      - name: Add LLVM to PATH
        run: echo "C:\\LLVM\\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Show versions
        run: |
          clang-cl --version
          cmake --version
          ninja --version

      # Configure using CMakePresets.json
      - name: Configure (${{ matrix.config }})
        run: cmake --preset ${{ matrix.configure_preset }}

      # Verify that clang-cl is really used (guard against defaulting to cl.exe)
      - name: Verify compiler selection
        run: |
          cmake -LA -N out/build/${{ matrix.configure_preset }} | findstr CMAKE_CXX_COMPILER
          cmake -LA -N out/build/${{ matrix.configure_preset }} | findstr CMAKE_C_COMPILER

      # Build with presets (Ninja)
      - name: Build (${{ matrix.config }})
        run: cmake --build --preset ${{ matrix.build_preset }} --config ${{ matrix.config }} -j 4

      # Package artifacts (EXE + DLL + LIB) and create checksums
      - name: Package artifacts
        run: |
          New-Item -Force -ItemType Directory artifact | Out-Null
          Copy-Item out\build\${{ matrix.configure_preset }}\bin\lbw_bootstrap.exe artifact\
          Copy-Item out\build\${{ matrix.configure_preset }}\bin\ladybird_platform_windows.dll artifact\
          Copy-Item out\build\${{ matrix.configure_preset }}\bin\ladybird_platform_windows.lib artifact\

          # SHA256 checksums for integrity
          Get-FileHash artifact\lbw_bootstrap.exe -Algorithm SHA256 | ForEach-Object { $_.Hash + " *lbw_bootstrap.exe" } | Out-File artifact\SHA256SUMS.txt -Encoding ascii
          Get-FileHash artifact\ladybird_platform_windows.dll -Algorithm SHA256 | ForEach-Object { $_.Hash + " *ladybird_platform_windows.dll" } | Add-Content artifact\SHA256SUMS.txt -Encoding ascii
          Get-FileHash artifact\ladybird_platform_windows.lib -Algorithm SHA256 | ForEach-Object { $_.Hash + " *ladybird_platform_windows.lib" } | Add-Content artifact\SHA256SUMS.txt -Encoding ascii

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lbw-${{ matrix.config }}-windows
          path: artifact
